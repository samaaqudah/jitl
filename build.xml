<?xml version="1.0" encoding="UTF-8"?>
<project default="usage" basedir=".">
	<!-- These properties must not be modified -->
	<property file="./build.properties"/>
	<property name="output.classes" value="${output.dir}/classes"/>
	
	<target name="usage">
		<java fork="no" classname="org.apache.tools.ant.Main">
			<arg line="-f build.xml -projecthelp"/>
		</java>
	</target>	

	
	<!-- Initialization target                   -->
	<target name="init">
		<tstamp/>
		<property name="project.name" value="jitl"/>
		<echo message="--- ${project.name} ---"/>
		<!-- These properties can be modified for each environment -->
		<property name="verbose" value="off"/>
		<property name="debug" value="on"/>
		<property name="optimize" value="on"/>
		<property name="deprecation" value="off"/>
	</target>
	<target name="initdirs" description="create dirs needed by build">
		<tstamp/>
		<mkdir dir="${output.dir}"/>
		<mkdir dir="${output.classes}"/>
	</target>

	<!--Compiles the source directory           -->
	<target name="compile" depends="init,initdirs" description="compile project">
		<javac destdir="${output.classes}" debug="${debug}" verbose="${verbose}" optimize="${optimize}" deprecation="${deprecation}" failonerror="yes">
			<classpath>
				<pathelement location="${output.classes}"/>
			</classpath>
			<src path="${project.src}"/>
			<include name="**/*.java"/>
		</javac>
	</target>
	
	<!-- Clean source directories                 -->
	<target name="clean" depends="init" description="clean project">
		<echo message="Delete all files under ${output.dir}"/>
		<delete dir="${output.dir}"/>
		<delete dir="docs"/>
	</target>

	
	<!-- 
	************************************************
		Main Build
	************************************************
	-->	
    <target name="full.build" depends="clean,compile" description="perform full build">	
	</target>	
	
	<target name="dist" depends="clean,compile,javadoc" description="Prepare distribution">
		    <jar jarfile="${project.name}.jar"  filesetmanifest="merge">
		        <fileset dir="${output.classes}"/>
		    </jar>
		    <zip destfile="jitl-${DSTAMP}.zip">
			<fileset dir="." includes="${project.name}.jar"/>
			<fileset dir="." includes="README"/>
			<fileset dir="." includes="LICENCE"/>
			<fileset dir="." includes="docs/api/**/*.*"/>
		    </zip>
	</target>
	
	<target name="distsrc"  depends="clean,compile,javadoc" description="Prepare distribution + source code">
		    <jar jarfile="${project.name}.jar">
		        <fileset dir="${output.classes}"/>
		    </jar>
		    <zip destfile="jitl-src-${DSTAMP}.zip">
			<fileset dir="." includes="${project.name}.jar"/>
			<fileset dir="." includes="README"/>
			<fileset dir="." includes="LICENCE"/>
			<fileset dir="." includes="src/**/*.java" excludes="net/**/*.svn"/>
			<fileset dir="." includes="docs/api/**/*.*"/>
		    </zip>
	</target>

	
	<target name="javadoc">
		<mkdir dir="docs"/>
		<mkdir dir="docs/api"/>
  			<javadoc
           			destdir="docs/api"
          			author="true"
           			version="true"
           			use="true"
           			windowtitle="Jitl API">
    				<fileset dir="src" defaultexcludes="yes">
      				<include name="**"/>
    				</fileset>
    				<doctitle><![CDATA[<h1>Jitl</h1>]]></doctitle>
  			</javadoc>
	</target>
</project>